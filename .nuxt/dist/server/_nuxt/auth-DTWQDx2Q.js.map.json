{"file":"auth-DTWQDx2Q.js","mappings":";;;;;;;;;;;;;;AAAA,MAAA,OAAe,0BAA0B,CAAC,IAAI,SAAS;AAC/B;AA+BxB,CAAC;","names":[],"sources":["../../../../middleware/auth.ts"],"sourcesContent":["export default defineNuxtRouteMiddleware((to, from) => {\r\n    if (process.server) return;\r\n\r\n    const isAuthenticated = useState('isAuthenticated', () => false);\r\n    const isChecking = useState('isChecking', () => true);\r\n\r\n    if (!process.client) return;\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n        isChecking.value = false;\r\n        return navigateTo('/unauthorized');\r\n    }\r\n\r\n    const decoded = JSON.parse(atob(token.split('.')[1]));\r\n    const userRole = decoded.role;\r\n\r\n    const routeRoles: Record<string, string[]> = {\r\n        '/doctor/dashboard': ['doctor'],\r\n        '/admin/dashboard': ['admin'],\r\n        '/patient/dashboard': ['patient'],\r\n    };\r\n\r\n    const allowedRoles = routeRoles[to.path];\r\n    if (allowedRoles && !allowedRoles.includes(userRole)) {\r\n        isChecking.value = false;\r\n        return navigateTo('/unauthorized');\r\n    }\r\n\r\n    isAuthenticated.value = true;\r\n    isChecking.value = false;\r\n});\r\n"],"version":3}